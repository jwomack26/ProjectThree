{"version":3,"sources":["components/Banner.png","components/Form.js","components/FilterButton.js","components/Todo.js","components/Contacts/Form2.js","App.js","index.js"],"names":["module","exports","Form","props","useState","name","setName","onSubmit","e","preventDefault","trim","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","Contact","placeholder","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","key","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","class","src","require","newTask","nanoid","tabIndex","role","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bc84fc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Banner.ff741683.png\";","import React, { useState } from \"react\";\nfunction Form(props) {\n  const [name, setName] = useState('');\n\nfunction handleSubmit(e) {\n    e.preventDefault();\n    if (!name.trim()) {\n      return;\n    }\n    props.addTask(name);\n    setName(\"\");\n  }\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n\nreturn (\n  <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\"> \n          WHAT NEEDS TO BE DONE?\n        </label>\n      </h2>\n\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        ADD NEW TASK\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;\n","import React, { useEffect, useRef, useState } from \"react\";\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!newName.trim()) {\n      return;\n    }\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n          >\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n        </div>\n    </div>\n  );\n\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\n","import React from 'react';\n\nconst Contact = () => {\n  \n  return(\n    <form className=\"form\">\n      <h2 className=\"label__lg\">CONTACT US</h2>\n      <label>Name</label>\n      <input className=\"name\"placeholder=\"name\"/>\n\n      <label>Email</label>\n      <input className=\"email\"placeholder=\"email\"/>\n\n      <label>Message</label>\n      <textarea className=\"message\"placeholder=\"message\"></textarea>\n      <br></br>\n      <button className=\"submit\" type=\"submit\">SUBMIT</button>\n</form>\n  )\n}\nexport default Contact","import React, { useState, useRef, useEffect } from \"react\";\n\nimport Toolbar from \"./components/Toolbar/Toolbar\";\n\nimport Form from \"./components/Form\";\n\nimport FilterButton from \"./components/FilterButton\";\n\nimport Todo from \"./components/Todo\";\n\nimport { nanoid } from \"nanoid\";\n\nimport Contact from \"./components/Contacts/Form2\";\n\n\n\n\n\nfunction usePrevious(value) {\n\n  const ref = useRef();\n\n  useEffect(() => {\n\n    ref.current = value;\n\n  });\n\n  return ref.current;\n\n}\n\n \n\nconst FILTER_MAP = {\n\n  All: () => true,\n\n  Active: task => !task.completed,\n\n  Completed: task => task.completed\n\n};\n\n \n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\n \n\nfunction App(props) {\n\n  const [tasks, setTasks] = useState(props.tasks);\n\n  const [filter, setFilter] = useState('All');\n\n \n\n  \n\nfunction toggleTaskCompleted(id) {\n\n    const updatedTasks = tasks.map(task => {\n\n      // if this task has the same ID as the edited task\n\n      if (id === task.id) {\n\n        // use object spread to make a new obkect\n\n        // whose `completed` prop has been inverted\n\n        return {...task, completed: !task.completed}\n\n      }\n\n      return task;\n\n \n\n      \n\n    });\n\n    setTasks(updatedTasks);\n\n    \n\n  }\n\n \n\n  function deleteTask(id) {\n\n    const remainingTasks = tasks.filter(task => id !== task.id);\n\n    setTasks(remainingTasks);\n\n  }\n\n \n\n  function editTask(id, newName) {\n\n    const editedTaskList = tasks.map(task => {\n\n    // if this task has the same ID as the edited task\n\n      if (id === task.id) {\n\n        //\n\n        return {...task, name: newName}\n\n      }\n\n      return task;\n\n    });\n\n    setTasks(editedTaskList);\n\n  }\n\n \n\n  const taskList = tasks\n\n  .filter(FILTER_MAP[filter])\n\n  .map(task => (\n\n    <Todo\n\n      id={task.id}\n\n      name={task.name}\n\n      completed={task.completed}\n\n      key={task.id}\n\n      toggleTaskCompleted={toggleTaskCompleted}\n\n      deleteTask={deleteTask}\n\n      editTask={editTask}\n\n    />\n\n  ));\n\n \n\n  const filterList = FILTER_NAMES.map(name => (\n\n    <FilterButton\n\n      key={name}\n\n      name={name}\n\n      isPressed={name === filter}\n\n      setFilter={setFilter}\n\n    />\n    \n   \n  ));\n\n  \n  function addTask(name) {\n\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n\n    setTasks([...tasks, newTask]);\n\n  }\n\n \n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n \n\n  const listHeadingRef = useRef(null);\n\n  const prevTaskLength = usePrevious(tasks.length);\n\n \n\n  useEffect(() => {\n\n    if (tasks.length - prevTaskLength === -1) {\n\n      listHeadingRef.current.focus();\n\n    }\n\n  }, [tasks.length, prevTaskLength]);\n\n \n\n  return (\n\n    <div className=\"todoapp stack-large\">\n\n<img class=\"image\" src={require('./components/Banner.png')} />\n\n\n    \n<Contact/>\n\n\n<Form addTask={addTask} />\n\n      <div className=\"filters btn-group stack-exception\">\n\n        {filterList}\n\n      </div>\n\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n\n        {headingText}\n\n      </h2>\n\n      <ul\n\n        role=\"list\"\n\n        className=\"todo-list stack-large stack-exception\"\n\n        aria-labelledby=\"list-heading\"\n\n      >\n\n        {taskList}\n\n      </ul>\n\n    </div>\n\n\n  );\n\n}\n\n\n \n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst DATA = [\n  \n  \n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}